1+1
v=c(1,2,3,4)
v
for (i in v)
1+i
for (i in v)
print(1+i)
1+1
q()
install.packages("swirl")
library("swirl", lib.loc="C:/Program Files/R/R-3.2.3/library")
detach("package:swirl", unload=TRUE)
library(swirl)
install_from_swirl('R Programming')
swirl()
swirl()
bye()
setwd("C:/Users/aujomb/Dropbox/Projects/datasciencecoursera/2_r_programming/week4")
setwd("C:/Users/aujomb/Dropbox/Projects/datasciencecoursera/2_r_programming/week4/rprog_data_ProgAssignment3-data")
ls()
list()
dir()
source('rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
outcome <- 'heart attack'
num <- 20
df <- read.csv("outcome-of-care-measures.csv",
df <- read.csv("outcome-of-care-measures.csv",
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
## Check that state and outcome are valid
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
View(df)
View(df)
outcome <- 'heart attack'
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
states <- unique(df$State)
class(states)
states[[1]]
states[[2]]
length(states)
?for
loop
for (i in 1:4){
print(i)
}
32*40
*4
1280*4
1280*52
32*52*40
32*52*44
32*52*48
32*52*50
outcome <- 'heart attack'
num <- 20
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
if (sum(df$State == state) == 0) {
stop('invalid state')
}
states <- unique(df$State)
matrix <- c()
for (state in states){
df_state <- df[df$State == state, ]
new_df <- data.frame(as.character(df_state$Hospital.Name), as.numeric(df_state[[id]]))
names(new_df) <- c('h name', 'rate')
new_df <- new_df[complete.cases(new_df), ]
sorted_df <- new_df[ order(new_df$rate, new_df$`h name`), ]
output <- sorted_df[num, 1][[1]]
if (num == 'best') {
output <- as.vector(sorted_df$`h name`)[[1]]
} else if (num == 'worst') {
output <- as.vector(sorted_df$`h name`)[[length(sorted_df$`h name`)]]
} else if (num <= length(sorted_df$`h name`)) {
output <- as.vector(sorted_df$`h name`)[[num]]
} else {
output <- NA
}
matrix <- rbind(matrix, c(state, output))
}
output_df <- as.data.frame(matrix)
names(output_df) <- c('id', 'nobs')
head(output_df)
outcome <- 'heart attack'
num <- 20
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
states <- unique(df$State)
matrix <- c()
for (state in states){
output <- rankhospital(state, outcome, num)
matrix <- rbind(matrix, c(state, output))
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
## Check that state and outcome are valid
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
if (sum(df$State == state) == 0) {
stop('invalid state')
}
df_state <- df[df$State == state, ]
new_df <- data.frame(as.character(df_state$Hospital.Name), as.numeric(df_state[[id]]))
names(new_df) <- c('h name', 'rate')
new_df <- new_df[complete.cases(new_df), ]
sorted_df <- new_df[ order(new_df$rate, new_df$`h name`), ]
output <- sorted_df[num, 1][[1]]
if (num == 'best') {
output <- as.vector(sorted_df$`h name`)[[1]]
} else if (num == 'worst') {
output <- as.vector(sorted_df$`h name`)[[length(sorted_df$`h name`)]]
} else if (num <= length(sorted_df$`h name`)) {
output <- as.vector(sorted_df$`h name`)[[num]]
} else {
output <- NA
}
output
}
for (state in states){
output <- rankhospital(state, outcome, num)
matrix <- rbind(matrix, c(state, output))
}
output_df <- as.data.frame(matrix)
names(output_df) <- c('id', 'nobs')
head(output_df)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
states <- unique(df$State)
matrix <- c()
for (state in states){
output <- rankhospital(state, outcome, num)
matrix <- rbind(matrix, c(output, state))
}
output_df <- as.data.frame(matrix)
names(output_df) <- c('id', 'nobs')
output_df
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
## Check that state and outcome are valid
if (outcome == 'heart attack'){
id <- 11
} else if (outcome == 'heart failure'){
id <- 17
} else if (outcome == 'pneumonia'){
id <- 23
} else {
stop('invalid outcome')
}
if (sum(df$State == state) == 0) {
stop('invalid state')
}
df_state <- df[df$State == state, ]
new_df <- data.frame(as.character(df_state$Hospital.Name), as.numeric(df_state[[id]]))
names(new_df) <- c('h name', 'rate')
new_df <- new_df[complete.cases(new_df), ]
sorted_df <- new_df[ order(new_df$rate, new_df$`h name`), ]
output <- sorted_df[num, 1][[1]]
if (num == 'best') {
output <- as.vector(sorted_df$`h name`)[[1]]
} else if (num == 'worst') {
output <- as.vector(sorted_df$`h name`)[[length(sorted_df$`h name`)]]
} else if (num <= length(sorted_df$`h name`)) {
output <- as.vector(sorted_df$`h name`)[[num]]
} else {
output <- NA
}
output
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
states <- unique(df$State)
matrix <- c()
for (state in states){
output <- rankhospital(state, outcome, num)
matrix <- rbind(matrix, c(output, state))
}
output_df <- as.data.frame(matrix)
names(output_df) <- c('hospital', 'state')
sorted_df <- output_df[ order(output_df$state, output_df$hospital, ]
sorted_df
}
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character", nrows = 4710L)
states <- unique(df$State)
matrix <- c()
for (state in states){
output <- rankhospital(state, outcome, num)
matrix <- rbind(matrix, c(output, state))
}
output_df <- as.data.frame(matrix)
names(output_df) <- c('hospital', 'state')
sorted_df <- output_df[ order(output_df$state, output_df$hospital), ]
sorted_df
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
source('best.R')
source('rankhospital.R')
source('rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
