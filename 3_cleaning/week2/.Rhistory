library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
hg19 <- dbConnect(MySQL(),
user='genome',
db='hg19',
host='genome-mysql.cse.ucsc.edu')
query <- dbSendQuery(
hg19,
"select * from affyU133Plus2 where
misMatches between 1 and 3"
)
affyMis <- fetch(query)
quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10)
dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
link <- 'http://bioconductor.org/bioLite.R'
source(link)
link <- 'http://bioconductor.org/biocLite.R'
source(link)
biocLite('rhdf5')
library(rhdf5)
link <- 'http://bioconductor.org/biocLite.R'
source(link)
biocLite('rhdf5')
library(rhdf5)
created <- h5createFile('example.h5')
created
created <- h5createGroup('example.h5', 'foo')
created <- h5createGroup('example.h5', 'baa')
created <- h5createGroup('example.h5', 'foo/foobaa')
h5ls('example.h5')
library(httr)
myapp = oauth_app('githut',
key=63157c5462bd2257b128,
secret=3422f3e16fe3293ad899305b6d06ea4b88266104)
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints('github', myapp)
)
github_token <- oauth2.0_token(oauth_endpoints('github', myapp))
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints('github', myapp))
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
2
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
linkUrl <-"https://api.github.com/users/jtleek/repos"
req <- GET(linkUrl, gtoken)
stop_for_status(req)
content(req)
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
linkUrl <-"https://api.github.com/users/jtleek/repos"
req <- GET(linkUrl, gtoken)
stop_for_status(req)
content(req)
req
con <- url('http://biostat.jhsph.edu/~jleek/contact.html')
htmlCode = readLines(con)
close(con)
lines <- c(10, 20, 30, 100)
htmlCode[10]
for (i in lines) {
x <- nchar(htmlCode[i])
print(x)
}
fileUrl <- 'http://biostat.jhsph.edu/~jleek/contact.html'
download.file(fileUrl, destfile = 'for_file.csv')
dateDownloaded <- date()
w <- c(12, 7, 4, 9, 4, 9, 4, 9, 4)
for_file <- read.fwf('for_file.csv', w, skip=4)
library(jsonlite)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
linkUrl <-"https://api.github.com/users/jtleek/repos"
req <- GET(linkUrl, gtoken)
stop_for_status(req)
library(httpuv)
req <- GET(linkUrl, gtoken)
stop_for_status(req)
oauth_endpoints("github")
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
linkUrl <-"https://api.github.com/users/jtleek/repos"
req <- GET(linkUrl, gtoken)
stop_for_status(req)
content(req)
setwd("~/Dropbox/Projects/datasciencecoursera/3_cleaning/week2")
install.packages("httpuv")
install.packages("httpuv")
install.packages("httr")
library(jsonlite)
library(httpuv)
library(httr)
oauth_endpoints("github")
myapp = oauth_app('githut',
key="63157c5462bd2257b128",
secret="3422f3e16fe3293ad899305b6d06ea4b88266104")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
linkUrl <-"https://api.github.com/users/jtleek/repos"
req <- GET(linkUrl, gtoken)
stop_for_status(req)
content(req)
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
index <- match('datasharing', json2$name)
json2$created_at[[index]]
?View
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages('swirl')
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
swirl()
swirl()
install_from_swirl('Getting and Cleaning Data')
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
View(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
unique <- quantile(pack_sum$unique, probs=0.99)
unique <- quantile(pack_sum$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_counts <- filter(pack_sum, unique > 465)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
View(result3)
submit()
